{"version":3,"sources":["Api/MarvelApi.js","redux/comics.js","redux/favourites.js","redux/store.js","Components/Content/ContentStyle.js","Assets/images/star.svg","Assets/images/redStar.svg","Components/Content/Components/Card/CardStyle.js","Components/Content/Components/Card/Card.js","Components/Content/Components/Loading/LoadingStyle.js","Components/Content/Components/Loading/Loading.js","Components/Content/ContentGrid.js","Components/Error/ErrorStyle.js","Components/Error/Error.js","Assets/images/remove.svg","Components/Favourites Panel/Components/FavouritesContent/Components/FavouriteStyle.js","Components/Favourites Panel/Components/FavouritesContent/Components/Favourite.js","Components/Favourites Panel/Components/FavouritesContent/FavouritesContentStyle.js","Components/Favourites Panel/Components/FavouritesContent/FavouriteContent.js","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeaderStyle.js","Components/Favourites Panel/Components/FavouritesHeader/FavouritesHeader.js","Components/Favourites Panel/FavouritesPanelStyle.js","Components/Favourites Panel/FavouritesPanel.js","Components/Header/HeaderStyle.js","Components/Header/Header.js","App.js","index.js"],"names":["MarvelApi","fetchComics","offset","a","parameters","apikey","ts","hash","url","Object","entries","map","join","fetch","res","status","error","json","body","comics","data","results","console","log","loading","comicsAdapter","createEntityAdapter","lastVisible","initialState","getInitialState","finished","createSlice","name","reducers","addComics","state","action","addMany","payload","setError","setFinished","actions","getSelectors","selectComicById","selectById","selectComicsIds","selectIds","favouritesAdapter","open","favourites","toggleOpen","addFavourite","addOne","removeFavourite","removeOne","selectFavouriteById","selectFavouriteIds","configureStore","reducer","StyledOuter","styled","div","sidePanelOpen","StyledInner","CardContainer","left","top","Image","img","Title","Button","button","favourite","redStar","star","Card","comicId","style","dispatch","useDispatch","comic","useSelector","src","thumbnail","path","alt","title","onClick","id","LoadingContainer","Progress","CircularProgress","Loading","size","thickness","OuterElement","forwardRef","ref","children","onScroll","InnerElement","props","Row","React","memo","rowIndex","columnIndex","items","columns","areEqual","ContentGrid","comicIds","hasNextPage","useState","resize","setResize","loadMoreItems","useCallback","length","isItemLoaded","index","useEffect","onResize","window","addEventListener","removeEventListener","dimensions","useMemo","colWidth","innerWidth","xPadding","sidePanelAdj","width","height","innerHeight","colCount","Math","max","floor","itemCount","rowCount","ceil","customOnItemsRendered","infiniteOnItemsRendered","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","visibleStartIndex","visibleStopIndex","threshold","onItemsRendered","columnCount","columnWidth","rowHeight","outerElementType","innerElementType","itemData","ErrorContainer","Error","FavouriteContainer","li","RemoveButton","remove","Favourite","favouriteId","ContentContainer","FavouritesList","ul","FavouritesContent","favouriteIds","HeaderContainer","h2","FavouritesHeader","FavouritesPanelContainer","FavouritesPanel","header","SiteHeading","Header","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.92fbb6e5.chunk.js","sourcesContent":["export class MarvelApi {\r\n  static fetchComics = async (offset) => {\r\n    const base = \"https://gateway.marvel.com/v1/public/comics?\";\r\n    const parameters = {\r\n      apikey: \"3cb62d086d5debdeea139095cbb07fe4\",\r\n      ts: \"redant\",\r\n      hash: \"140e85a50884cef76d614f6dacada288\",\r\n      offset,\r\n    };\r\n    const url =\r\n      base +\r\n      Object.entries(parameters)\r\n        .map((entries) => entries.join(\"=\"))\r\n        .join(\"&\");\r\n    try {\r\n      const res = await fetch(url);\r\n      if (res.status >= 400) return { error: res.status };\r\n      const body = await res.json();\r\n      return { comics: body.data.results };\r\n    } catch (error) {\r\n      console.log(error);\r\n      return { error };\r\n    }\r\n  };\r\n}\r\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { MarvelApi } from \"../Api/MarvelApi\";\r\n\r\nconst comicsAdapter = createEntityAdapter();\r\n\r\nlet lastVisible = 0;\r\nlet loading;\r\n\r\nexport const initialState = comicsAdapter.getInitialState({\r\n  error: false,\r\n  finished: false,\r\n});\r\n\r\nconst comics = createSlice({\r\n  name: \"comics\",\r\n  initialState,\r\n  reducers: {\r\n    addComics(state, action) {\r\n      comicsAdapter.addMany(state, action.payload);\r\n    },\r\n    setError(state) {\r\n      state.error = true;\r\n    },\r\n    setFinished(state) {\r\n      state.finished = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addComics, setError, setFinished } = comics.actions;\r\n\r\nexport const { selectById: selectComicById, selectIds: selectComicsIds } =\r\n  comicsAdapter.getSelectors((state) => state.comics);\r\n\r\nexport default comics.reducer;\r\n\r\nexport const fetchComics = () => async (dispatch) => {\r\n  if (loading) return;\r\n  loading = true;\r\n  const { comics, error } = await MarvelApi.fetchComics(lastVisible);\r\n  loading = false;\r\n  if (error) {\r\n    dispatch(setError());\r\n    return;\r\n  }\r\n  lastVisible += comics.length;\r\n  if (comics.length < 20) {\r\n    dispatch(setFinished());\r\n  }\r\n  dispatch(addComics(comics));\r\n};\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst favouritesAdapter = createEntityAdapter();\r\n\r\nexport const initialState = favouritesAdapter.getInitialState({\r\n  open: false,\r\n});\r\n\r\nconst favourites = createSlice({\r\n  name: \"favourites\",\r\n  initialState,\r\n  reducers: {\r\n    toggleOpen(state) {\r\n      state.open = !state.open;\r\n    },\r\n    addFavourite(state, action) {\r\n      favouritesAdapter.addOne(state, action.payload);\r\n    },\r\n    removeFavourite(state, action) {\r\n      favouritesAdapter.removeOne(state, action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleOpen, addFavourite, removeFavourite } = favourites.actions;\r\n\r\nexport const {\r\n  selectById: selectFavouriteById,\r\n  selectIds: selectFavouriteIds,\r\n} = favouritesAdapter.getSelectors((state) => state.favourites);\r\n\r\nexport default favourites.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport comics from \"./comics\";\r\nimport favourites from \"./favourites\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    comics,\r\n    favourites,\r\n  },\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledOuter = styled.div`\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  z-index: 1;\r\n  height: calc(100% - 50px);\r\n  margin-top: 50px;\r\n  padding: 25px;\r\n  overflow: auto;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  left: ${({ sidePanelOpen }) => (!sidePanelOpen ? \"0\" : \"360px\")};\r\n  width: ${({ sidePanelOpen }) =>\r\n    !sidePanelOpen ? \"100%\" : \"calc(100% - 360px)\"};\r\n  @media only screen and (max-width: 480px) {\r\n    padding: 5px;\r\n  }\r\n`;\r\nexport const StyledInner = styled.div`\r\n  position: relative;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/star.454f890b.svg\";","export default __webpack_public_path__ + \"static/media/redStar.73930ac8.svg\";","import styled from \"styled-components\";\r\nimport star from \"../../../../Assets/images/star.svg\";\r\nimport redStar from \"../../../../Assets/images/redStar.svg\";\r\n\r\nexport const CardContainer = styled.div`\r\n  position: absolute;\r\n  height: 540px;\r\n  width: 300px;\r\n  background: rgb(236, 240, 243);\r\n  border-radius: 25px;\r\n  margin: 25px 0;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  box-shadow: 13px 13px 20px rgb(223 206 209), -13px -13px 20px rgb(255 255 255);\r\n  left: ${({ left }) => left}px;\r\n  top: ${({ top }) => top}px;\r\n\r\n  @media only screen and (min-width: 480px) {\r\n    margin: 25px;\r\n    &:hover {\r\n      transform: scale(1.05);\r\n      box-shadow: 13px 13px 40px rgb(223 206 209),\r\n        -13px -13px 40px rgb(255 255 255);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  height: 90px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 1px solid #fff;\r\n  border-radius: 50%;\r\n  background: url(${({ favourite }) => (favourite ? redStar : star)}) 50% 50%\r\n    no-repeat;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  background-size: 60%;\r\n  cursor: pointer;\r\n  @media only screen and (min-width: 480px) {\r\n    &:hover {\r\n      background-color: rgba(236, 29, 36, 0.3);\r\n      background-color: rgba(\r\n        236,\r\n        29,\r\n        36,\r\n        ${({ favourite }) => (favourite ? \"0.3\" : \"0.7\")}\r\n      );\r\n    }\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectComicById } from \"../../../../redux/comics\";\r\nimport {\r\n  addFavourite,\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../redux/favourites\";\r\nimport { Button, CardContainer, Image, Title } from \"./CardStyle\";\r\n\r\nexport default function Card({ comicId, style }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const comic = useSelector((state) => selectComicById(state, comicId));\r\n  const favourite = useSelector((state) => selectFavouriteById(state, comicId));\r\n\r\n  const onClick = () => {\r\n    if (favourite) dispatch(removeFavourite(comicId));\r\n    else {\r\n      const payload = {\r\n        id: comic.id,\r\n        title: comic.title,\r\n      };\r\n      dispatch(addFavourite(payload));\r\n    }\r\n  };\r\n  return (\r\n    <CardContainer top={style.top} left={style.left}>\r\n      <Image\r\n        src={`${comic.thumbnail.path}/portrait_uncanny.jpg`}\r\n        alt={`${comic.title} image`}\r\n      />\r\n      <Title>{comic.title}</Title>\r\n      <Button onClick={onClick} favourite={favourite}></Button>\r\n    </CardContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport const LoadingContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 590px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  left: ${({ left }) => left}px;\r\n  top: ${({ top }) => top}px;\r\n`;\r\nexport const Progress = styled(CircularProgress)`\r\n  color: #ec1d24 !important;\r\n`;\r\n","import { LoadingContainer, Progress } from \"./LoadingStyle\";\r\n\r\nexport default function Loading({ style }) {\r\n  return (\r\n    <LoadingContainer top={style.top} left={style.left}>\r\n      <Progress size={100} thickness={2} />\r\n    </LoadingContainer>\r\n  );\r\n}\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { FixedSizeGrid, areEqual } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\n\r\nimport { StyledOuter, StyledInner } from \"./ContentStyle\";\r\nimport Card from \"./Components/Card/Card\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchComics, selectComicsIds } from \"../../redux/comics\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\n\r\nconst ROW_HEIGHT = 590;\r\nconst OuterElement = forwardRef(({ children, onScroll }, ref) => {\r\n  const sidePanelOpen = useSelector(({ favourites }) => favourites.open);\r\n  return (\r\n    <StyledOuter onScroll={onScroll} sidePanelOpen={sidePanelOpen}>\r\n      {children}\r\n    </StyledOuter>\r\n  );\r\n});\r\n\r\nconst InnerElement = (props) => {\r\n  return <StyledInner {...props} />;\r\n};\r\n\r\nconst Row = React.memo(function Row(props) {\r\n  const { data, rowIndex, columnIndex, style } = props;\r\n  const { items, columns } = data;\r\n  const comicId = items[rowIndex * columns + columnIndex];\r\n  if (!comicId) {\r\n    if (columnIndex === 0) {\r\n      return <Loading style={style} />;\r\n    }\r\n    return null;\r\n  }\r\n  return <Card key={comicId} comicId={comicId} style={style} />;\r\n}, areEqual);\r\n\r\nexport default function ContentGrid() {\r\n  const dispatch = useDispatch();\r\n  const comicIds = useSelector(selectComicsIds);\r\n\r\n  const sidePanelOpen = useSelector(({ favourites }) => favourites.open);\r\n  const hasNextPage = useSelector(({ comics }) => !comics.finished);\r\n\r\n  const [resize, setResize] = useState([]);\r\n\r\n  const loadMoreItems = useCallback(() => {\r\n    dispatch(fetchComics());\r\n  }, [dispatch]);\r\n\r\n  const isItemLoaded = useCallback(\r\n    (index) => !hasNextPage || index < comicIds.length,\r\n    [hasNextPage, comicIds]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setResize([]);\r\n    };\r\n    onResize();\r\n    window.addEventListener(\"resize\", onResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  const dimensions = useMemo(() => {\r\n    const colWidth = window.innerWidth > 480 ? 350 : 300;\r\n    const xPadding = window.innerWidth > 480 ? 50 : 10;\r\n    const yPadding = 50;\r\n    const yMargin = 50;\r\n\r\n    const sidePanelAdj = sidePanelOpen ? -350 : 0;\r\n    const width = window.innerWidth - xPadding + sidePanelAdj;\r\n    const height = window.innerHeight - yPadding - yMargin;\r\n    const colCount = Math.max(Math.floor(width / colWidth), 1);\r\n\r\n    const itemCount = hasNextPage\r\n      ? comicIds.length + colCount\r\n      : comicIds.length;\r\n\r\n    const rowCount = Math.ceil(itemCount / colCount);\r\n    return { itemCount, width, height, colCount, colWidth, rowCount };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sidePanelOpen, hasNextPage, comicIds.length, resize]);\r\n\r\n  const customOnItemsRendered = useCallback(\r\n    (infiniteOnItemsRendered) =>\r\n      ({\r\n        visibleColumnStartIndex,\r\n        visibleColumnStopIndex,\r\n        visibleRowStartIndex,\r\n        visibleRowStopIndex,\r\n      }) => {\r\n        const visibleStartIndex =\r\n          visibleRowStartIndex * dimensions.colCount + visibleColumnStartIndex;\r\n        const visibleStopIndex =\r\n          visibleRowStopIndex * dimensions.colCount + visibleColumnStopIndex;\r\n        infiniteOnItemsRendered({\r\n          visibleStartIndex,\r\n          visibleStopIndex,\r\n        });\r\n      },\r\n    [dimensions.colCount]\r\n  );\r\n\r\n  return (\r\n    <InfiniteLoader\r\n      isItemLoaded={isItemLoaded}\r\n      itemCount={dimensions.itemCount}\r\n      loadMoreItems={loadMoreItems}\r\n      threshold={3}\r\n    >\r\n      {({ onItemsRendered, ref }) => (\r\n        <FixedSizeGrid\r\n          ref={ref}\r\n          height={dimensions.height}\r\n          width={dimensions.width}\r\n          columnCount={dimensions.colCount}\r\n          columnWidth={dimensions.colWidth}\r\n          rowCount={dimensions.rowCount}\r\n          rowHeight={ROW_HEIGHT}\r\n          itemCount={dimensions.itemCount}\r\n          onItemsRendered={customOnItemsRendered(onItemsRendered)}\r\n          outerElementType={OuterElement}\r\n          innerElementType={InnerElement}\r\n          itemData={{\r\n            items: comicIds,\r\n            columns: dimensions.colCount,\r\n          }}\r\n        >\r\n          {Row}\r\n        </FixedSizeGrid>\r\n      )}\r\n    </InfiniteLoader>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ErrorContainer = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  height: calc(100% - 50px);\r\n  margin-top: 50px;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: red;\r\n  left: ${({ sidePanelOpen }) => (!sidePanelOpen ? \"0\" : \"360px\")};\r\n  width: ${({ sidePanelOpen }) =>\r\n    !sidePanelOpen ? \"100%\" : \"calc(100% - 360px)\"};\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { ErrorContainer } from \"./ErrorStyle\";\r\n\r\nexport default function Error() {\r\n  const sidePanelOpen = useSelector(({ favourites }) => favourites.open);\r\n  return (\r\n    <ErrorContainer sidePanelOpen={sidePanelOpen}>\r\n      Oops, something went wrong 🤨\r\n    </ErrorContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/remove.7892e306.svg\";","import styled from \"styled-components\";\r\nimport remove from \"../../../../../Assets/images/remove.svg\";\r\n\r\nexport const FavouriteContainer = styled.li`\r\n  padding: 15px 50px 15px 15px;\r\n  border-bottom: 1px solid rgb(204, 204, 204);\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div``;\r\n\r\nexport const RemoveButton = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 20px;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-top: -16px;\r\n  background: url(${remove}) 50% 50% no-repeat;\r\n  background-size: 50%;\r\n  border: 0;\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  removeFavourite,\r\n  selectFavouriteById,\r\n} from \"../../../../../redux/favourites\";\r\nimport { Title } from \"../../../../Content/Components/Card/CardStyle\";\r\nimport { FavouriteContainer, RemoveButton } from \"./FavouriteStyle\";\r\n\r\nexport default function Favourite({ favouriteId }) {\r\n  const dispatch = useDispatch();\r\n  const favourite = useSelector((state) =>\r\n    selectFavouriteById(state, favouriteId)\r\n  );\r\n  const onClick = () => {\r\n    dispatch(removeFavourite(favouriteId));\r\n  };\r\n\r\n  return (\r\n    <FavouriteContainer>\r\n      <Title>{favourite.title}</Title>\r\n      <RemoveButton onClick={onClick} />\r\n    </FavouriteContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentContainer = styled.div``;\r\nexport const FavouritesList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: outside none;\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectFavouriteIds } from \"../../../../redux/favourites\";\r\nimport Favourite from \"./Components/Favourite\";\r\nimport { ContentContainer, FavouritesList } from \"./FavouritesContentStyle\";\r\n\r\nexport default function FavouritesContent() {\r\n  const favouriteIds = useSelector(selectFavouriteIds);\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <FavouritesList>\r\n        {favouriteIds.map((favouriteId) => (\r\n          <Favourite key={favouriteId} favouriteId={favouriteId} />\r\n        ))}\r\n      </FavouritesList>\r\n    </ContentContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 64px;\r\n  text-align: center;\r\n  line-height: 64px;\r\n  border-bottom: 1px solid rgb(204, 204, 204);\r\n  border-top: 1px solid rgb(204, 204, 204);\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  color: #ec1d24;\r\n  font-weight: 700;\r\n`;\r\n","import { HeaderContainer, Title } from \"./FavouritesHeaderStyle\";\r\n\r\nexport default function FavouritesHeader() {\r\n  return (\r\n    <HeaderContainer>\r\n      <Title>Favourites</Title>\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavouritesPanelContainer = styled.div`\r\n  position: fixed;\r\n  z-index: 4;\r\n  top: 64px;\r\n  left: 0;\r\n  width: ${({ open }) => (open ? 360 : 0)}px;\r\n  height: calc(100% - 64px);\r\n  background: #ecf0f3;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-width: 100vw;\r\n  -webkit-transition: all 0.25s ease-in-out;\r\n  transition: all 0.25s ease-in-out;\r\n  border-right: 1px solid rgb(204, 204, 204);\r\n  box-shadow: 13px 0px 20px rgb(223, 206, 209);\r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport FavouritesContent from \"./Components/FavouritesContent/FavouriteContent\";\r\nimport FavouritesHeader from \"./Components/FavouritesHeader/FavouritesHeader\";\r\nimport { FavouritesPanelContainer } from \"./FavouritesPanelStyle\";\r\n\r\nexport default function FavouritesPanel() {\r\n  const open = useSelector(({ favourites }) => favourites.open);\r\n\r\n  return (\r\n    <FavouritesPanelContainer open={open}>\r\n      <FavouritesHeader />\r\n      <FavouritesContent />\r\n    </FavouritesPanelContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport redStar from \"../../Assets/images/redStar.svg\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100vw;\r\n  box-shadow: 0px 13px 20px rgb(223, 206, 209);\r\n  height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  background-color: #ecf0f3;\r\n`;\r\nexport const SiteHeading = styled.div`\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n  text-shadow: -1px -1px 5px #ec1d24, 1px -1px 5px #ec1d24, -1px 1px 5px #ec1d24,\r\n    1px 1px 5px #ec1d24;\r\n  font-size: 21px;\r\n  letter-spacing: 2px;\r\n  @media only screen and (min-width: 480px) {\r\n    font-size: 36px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  top: 14px;\r\n  left: 10px;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 3px solid red;\r\n  border-radius: 50%;\r\n  background: url(${redStar}) 50% 50% no-repeat;\r\n  background-size: 60%;\r\n  transform: rotate(${({ open }) => (open ? 360 : 0)}deg);\r\n  transition: all 0.75s;\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleOpen } from \"../../redux/favourites\";\r\nimport { Button, HeaderContainer, SiteHeading } from \"./HeaderStyle\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch();\r\n  const open = useSelector(({ favourites }) => favourites.open);\r\n\r\n  const onClick = () => {\r\n    dispatch(toggleOpen());\r\n  };\r\n  return (\r\n    <HeaderContainer>\r\n      <SiteHeading>Red Ant Comics</SiteHeading>\r\n      <Button onClick={onClick} open={open} />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\nimport Content from \"./Components/Content/ContentGrid\";\nimport Error from \"./Components/Error/Error\";\nimport FavouritesPanel from \"./Components/Favourites Panel/FavouritesPanel\";\nimport Header from \"./Components/Header/Header\";\n\nexport default function App() {\n  const error = useSelector(({ comics }) => comics.error);\n  return (\n    <>\n      <Header />\n      {!error ? <Content /> : <Error />}\n      <FavouritesPanel />\n    </>\n  );\n}\n","import \"./index.css\";\nimport \"./normalize.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}